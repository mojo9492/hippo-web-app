// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int             @id @default(autoincrement())
  last         String
  first        String
  email        String          @unique
  password     String
  updatedAt    DateTime        @default(now()) @updatedAt
  accessTokens AccessToken[]
  patients     Patient[]
  cargivers    Caregiver[]
  records      PatientRecord[]
}

model Patient {
  id          Int             @id @default(autoincrement())
  userId      Int
  user        User?           @relation(fields: [userId], references: [id])
  caregiverId Int
  caregiver   Caregiver?      @relation(fields: [caregiverId], references: [id])
  records     PatientRecord[]
}

model Caregiver {
  id       Int       @id @default(autoincrement())
  userId   Int
  user     User      @relation(fields: [userId], references: [id])
  patients Patient[]
}

model PatientRecord {
  id            String   @id @default(cuid())
  authorId      Int
  author        User?    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  patientId     Int
  patient       Patient? @relation(fields: [patientId], references: [id])
  date          DateTime
  bloodPressure String?
  bsl           Int?
  insulin       String?
  insAmount     Int?
  weight        Float?
  remarks       String?
  updatedAt     DateTime @default(now()) @updatedAt
}

model AccessToken {
  id          String   @id @default(cuid())
  hashedToken String
  userId      Int
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  revoked     Boolean  @default(false)
}
